{"version":3,"file":"static/js/849.573656dc.chunk.js","mappings":"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","sources":["app/components/styledMenu.js","app/forms/ticket.js","app/pages/board/item/menu.js","app/pages/board/item.js","app/pages/board/itemWrapper.js","app/pages/board/newTicket.js","app/forms/list.js","app/pages/board/list/menu.js","app/pages/board/listWrapper.js","app/pages/board/newList.js","app/pages/board.js"],"sourcesContent":["import React from \"react\";\nimport {Menu} from \"@mui/material\";\nimport { styled, alpha } from '@mui/material/styles';\n\nconst StyledMenu = styled((props) => (\n    <Menu\n        elevation={0}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n))(({ theme }) => ({\n    '& .MuiPaper-root': {\n        borderRadius: 6,\n        marginTop: theme.spacing(1),\n        minWidth: 180,\n        color:\n            theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n        boxShadow:\n            'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n        '& .MuiMenu-list': {\n            padding: '4px 0',\n        },\n        '& .MuiMenuItem-root': {\n            '& .MuiIcon-root': {\n                fontSize: 18,\n                color: theme.palette.text.secondary,\n                marginRight: theme.spacing(1.5),\n            },\n            '&:active': {\n                backgroundColor: alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.selectedOpacity,\n                ),\n            },\n        },\n    },\n}));\n\nexport default StyledMenu;\n","import React from \"react\";\nimport {TextField} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport CommonDialog from \"../components/dialog\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {add, update} from '../../store/ticketsSlice'\nimport {getByProperty} from \"../../store/commonSlice\";\n\nconst errorMessage = 'letters and numbers only.'\n\nfunction Form({handleClose, listId, ticket = null}){\n    const title = useSelector((state) => getByProperty(state, 'title'))\n    const description = useSelector((state) => getByProperty(state, 'description'))\n\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: ticket||{title, description}\n    });\n\n    const dispatch = useDispatch();\n\n    const dialogTitle = !ticket?'New Task':'Edit Task'\n\n    const onSave = async ({title, description}) => {\n        const item = {\n            title,\n            description,\n            id: ticket?.id || uuidv4(),\n            listId\n        };\n\n        const action = ticket?update:add;\n\n        await dispatch(action(item)).unwrap()\n        handleClose()\n    }\n\n    return (\n        <CommonDialog\n            open={true}\n            handleClose={handleClose}\n            handleSave={handleSubmit(onSave)}\n            title={dialogTitle}\n            content={\n                <>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        error={!!errors.title}\n                        {...{helperText:errors.title?errorMessage:''}}\n\n                        {...register('title', { pattern: /^[A-Za-z0-9]+$/i })}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Description\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        multiline\n                        {...register('description')}\n                    />\n                </>\n            }\n        />\n\n\n    )\n}\n\nexport default Form;\n","import React, {useState}  from \"react\";\nimport {Icon, IconButton, MenuItem} from \"@mui/material\";\nimport StyledMenu from \"../../../components/styledMenu\";\nimport TicketForm from \"../../../forms/ticket\";\nimport {deleteItem} from \"../../../../store/ticketsSlice\";\nimport CommonDialog from \"../../../components/dialog\";\nimport {useDispatch} from \"react-redux\";\n\nfunction ItemMenu({item}){\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const openMenu = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [open, setOpen] = useState(false);\n    const [confirm, setConfirm] = useState(false);\n\n    const openDialog = () => {handleClose(); setOpen(true)}\n    const closeDialog = () => setOpen(false)\n\n    const openConfirmDialog = () => {handleClose(); setConfirm(true)}\n    const closeConfirmDialog = () => setConfirm(false)\n\n    const onConfirm = async () => {\n        closeConfirmDialog()\n        await dispatch(deleteItem(item)).unwrap()\n    }\n\n    return (\n        <>\n            <IconButton aria-label=\"actions\"\n                        onClick={handleClick}\n                        aria-haspopup=\"true\"\n                        aria-expanded={open ? 'true' : undefined}\n            >\n                <Icon >more_vert</Icon>\n            </IconButton>\n            <StyledMenu\n                anchorEl={anchorEl}\n                open={openMenu}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={openDialog} disableRipple>\n                    <Icon >edit</Icon>\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={openConfirmDialog} disableRipple>\n                    <Icon >delete</Icon>\n                    Delete\n                </MenuItem>\n\n            </StyledMenu>\n            {open && <TicketForm handleClose={closeDialog} listId={item.listId} ticket={item}/>}\n            {confirm && <CommonDialog open={true}  handleClose={closeConfirmDialog} handleSave={onConfirm} saveTitle={'Yes'} content={'Confirm to delete?'}/>}\n        </>\n    )\n}\n\nexport default ItemMenu;\n","import React from \"react\";\nimport {Card, CardContent, CardHeader,Typography} from \"@mui/material\";\nimport ItemMenu from \"./item/menu\";\n\nfunction Item({item}){\n    return(\n        <Card sx={{m:1}}>\n            <CardHeader\n                action={\n                    <ItemMenu item={item}/>\n                }\n                subheader={item.title}\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {item.description}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default Item;\n","import React from \"react\";\nimport {Draggable} from \"react-beautiful-dnd\";\nimport Item from \"./item\";\n\nfunction ItemWrapper({item, idx}){\n    return(\n        <Draggable\n            draggableId={`${item.id}`}\n            index={idx}\n        >\n            {(provided, snapshot) => (\n                <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                >\n                    <Item item={item}/>\n                </div>\n            )}\n        </Draggable>\n    )\n}\n\nexport default ItemWrapper\n","import React, {useState} from \"react\";\nimport {\n    Button,\n    Card,\n    CardActions,\n} from \"@mui/material\";\n\nimport TicketForm from \"../../forms/ticket\";\n\nfunction NewTicket({listId}){\n    const [open, setOpen] = useState(false);\n\n    const openDialog = () => setOpen(true)\n    const closeDialog = () => setOpen(false)\n\n    return (\n        <Card elevation={0}>\n            <CardActions>\n                <Button size=\"large\" fullWidth onClick={openDialog}>New Task</Button>\n            </CardActions>\n            {open && <TicketForm  handleClose={closeDialog} listId={listId}/>}\n\n        </Card>\n    )\n}\nexport default NewTicket;\n","import React from \"react\";\nimport {TextField} from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport CommonDialog from \"../components/dialog\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {add, update} from '../../store/listsSlice'\nimport {getByProperty} from \"../../store/commonSlice\";\n\nconst errorMessage = 'letters and numbers only.'\n\nfunction Form({handleClose, list = null}){\n    const username = useSelector((state) => getByProperty(state, 'username'))\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: list||{title:username}\n    });\n\n    const dispatch = useDispatch();\n\n    const dialogTitle = !list?'New List':'Edit List'\n\n    const onSave = async ({title}) => {\n        const item = {\n            title,\n            id: list?.id || uuidv4()\n        };\n\n        const action = list?update:add;\n\n        await dispatch(action(item)).unwrap()\n        handleClose()\n    }\n\n    return (\n        <CommonDialog\n            open={true}\n            handleClose={handleClose}\n            handleSave={handleSubmit(onSave)}\n            title={dialogTitle}\n            content={\n                <>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Title\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        error={!!errors.title}\n\n                        {...{helperText:errors.title?errorMessage:''}}\n                        {...register('title', { pattern: /^[A-Za-z0-9]+$/i })}\n                    />\n                </>\n            }\n        />\n\n\n    )\n}\n\nexport default Form;\n","import React, {useState}  from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {Icon, IconButton, MenuItem} from \"@mui/material\";\nimport StyledMenu from \"../../../components/styledMenu\";\nimport ListForm from \"../../../forms/list\";\nimport CommonDialog from \"../../../components/dialog\";\nimport {deleteItem} from \"../../../../store/listsSlice\";\n\nfunction ListMenu({item}){\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const openMenu = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [open, setOpen] = useState(false);\n    const [confirm, setConfirm] = useState(false);\n\n    const openDialog = () => {handleClose(); setOpen(true)}\n    const closeDialog = () => setOpen(false)\n\n    const openConfirmDialog = () => {handleClose(); setConfirm(true)}\n    const closeConfirmDialog = () => setConfirm(false)\n\n    const onConfirm = async () => {\n        closeConfirmDialog()\n        await dispatch(deleteItem(item)).unwrap()\n    }\n\n    return (\n        <>\n            <IconButton aria-label=\"actions\"\n                        onClick={handleClick}\n                        aria-haspopup=\"true\"\n                        aria-expanded={open ? 'true' : undefined}\n            >\n                <Icon >more_vert</Icon>\n            </IconButton>\n            <StyledMenu\n                anchorEl={anchorEl}\n                open={openMenu}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={openDialog} disableRipple>\n                    <Icon >edit</Icon>\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={openConfirmDialog} disableRipple>\n                    <Icon >delete</Icon>\n                    Delete\n                </MenuItem>\n\n            </StyledMenu>\n            {open && <ListForm  handleClose={closeDialog} list={item}/>}\n            {confirm && <CommonDialog open={true}  handleClose={closeConfirmDialog} handleSave={onConfirm} saveTitle={'Yes'} content={'Confirm to delete?'}/>}\n        </>\n    )\n}\n\nexport default ListMenu;\n","import React from \"react\";\nimport {\n    ListItem,\n    ListItemText, Paper\n} from \"@mui/material\";\nimport {Droppable} from \"react-beautiful-dnd\";\nimport ItemWrapper from \"./itemWrapper\";\nimport {useSelector} from \"react-redux\";\nimport { getTicketsByList} from '../../../store/ticketsSlice'\nimport NewTicket from \"./newTicket\";\nimport ListMenu from \"./list/menu\";\n\nfunction ListWrapper({item}){\n    const tickets = useSelector((state) => getTicketsByList(state, item.id))\n\n    return (\n        <Paper variant=\"outlined\">\n            <ListItem\n                secondaryAction={\n                    <ListMenu item={item}/>\n                }\n            >\n                <ListItemText\n                    primary={item.title}\n                />\n            </ListItem>\n\n            <NewTicket listId={item.id}/>\n\n            <Droppable\n                droppableId={`${item.id}`}\n            >\n                {(provided, snapshot) => (\n                    <React.Fragment>\n                        <div\n                            ref={provided.innerRef}\n                            {...provided.droppableProps}\n                        >\n                            {tickets.map((ticket, idx) => (<ItemWrapper idx={idx} key={ticket.id} item={ticket}/>))}\n                        </div>\n                        {provided.placeholder}\n                    </React.Fragment>\n                )}</Droppable>\n        </Paper>\n    )\n}\nexport default ListWrapper;\n","import React, {useState} from \"react\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    Paper\n} from \"@mui/material\";\nimport ListForm from \"../../forms/list\";\n\n\nfunction NewList(){\n    const [open, setOpen] = useState(false);\n\n    const openDialog = () => setOpen(true)\n    const closeDialog = () => setOpen(false)\n\n    return (\n        <Paper variant=\"outlined\">\n\n            <Card >\n                <CardActions>\n                    <Button size=\"large\" fullWidth onClick={openDialog}>New List</Button>\n                </CardActions>\n            </Card>\n            {open && <ListForm  handleClose={closeDialog} />}\n        </Paper>\n    )\n}\nexport default NewList;\n","import React, {useEffect} from 'react';\nimport {\n    Grid,\n    Paper\n} from \"@mui/material\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport {DragDropContext} from 'react-beautiful-dnd';\nimport ListWrapper from \"./board/listWrapper\";\nimport NewList from \"./board/newList\";\nimport { getAllLists, fetch as fetchLists} from '../../store/listsSlice'\nimport { fetch as fetchTickets, update} from '../../store/ticketsSlice'\n\nfunction Page() {\n    const dispatch = useDispatch()\n    const lists = useSelector(getAllLists)\n\n    const listsStatus = useSelector((state) => state.lists.status)\n    const ticketsStatus = useSelector((state) => state.tickets.status)\n\n    useEffect(() => {\n        if (listsStatus === 'idle') {\n            dispatch(fetchLists())\n        }\n    }, [listsStatus, dispatch])\n\n    useEffect(() => {\n        if (ticketsStatus === 'idle') {\n            dispatch(fetchTickets())\n        }\n    }, [ticketsStatus, dispatch])\n\n    const onDragEnd = (result) => {\n        const { destination ,draggableId} = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        dispatch(update({id:draggableId, listId: destination.droppableId}));\n    }\n\n\n    return (\n        <Paper sx={{p:2}} elevation={0}>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Grid container spacing={2} >\n                    {lists.map((item, idx)=> (\n                        <Grid item xl={2} lg={2} md={3} sm={4} xs={12} key={item.id}>\n                            <ListWrapper item={item}/>\n                        </Grid>\n                    ))}\n\n                    <Grid item xl={2} lg={2} md={3} sm={4} xs={12}>\n                        <NewList />\n                    </Grid>\n                </Grid>\n            </DragDropContext>\n        </Paper>\n    );\n}\n\nexport default Page;\n"],"names":["styled","props","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","text","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","handleClose","listId","ticket","title","useSelector","state","getByProperty","description","useForm","defaultValues","register","handleSubmit","errors","formState","dispatch","useDispatch","dialogTitle","onSave","item","id","uuidv4","update","add","unwrap","open","handleSave","content","TextField","autoFocus","margin","label","type","fullWidth","variant","error","helperText","pattern","multiline","React","anchorEl","setAnchorEl","openMenu","Boolean","useState","setOpen","confirm","setConfirm","closeConfirmDialog","onConfirm","deleteItem","IconButton","onClick","event","currentTarget","undefined","Icon","onClose","MenuItem","disableRipple","saveTitle","Card","sx","m","CardHeader","subheader","CardContent","Typography","idx","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","CardActions","Button","size","list","username","tickets","getTicketsByList","Paper","ListItem","secondaryAction","ListItemText","droppableId","droppableProps","map","placeholder","lists","getAllLists","listsStatus","status","ticketsStatus","useEffect","fetchLists","fetchTickets","p","onDragEnd","result","destination","Grid","container","xl","lg","md","sm","xs"],"sourceRoot":""}